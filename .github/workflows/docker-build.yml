name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/siembox

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set the Docker tags based on the git ref
      - name: Set Docker tags
        id: tags
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "TAGS=latest,$VERSION" >> $GITHUB_ENV
          else
            echo "TAGS=latest,${{ github.sha }}" >> $GITHUB_ENV
          fi

      # Build and push each service
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('{0}/{1}/api:{2}', env.REGISTRY, env.IMAGE_NAME, github.ref_name) || '' }}

      - name: Build and push Detection image
        uses: docker/build-push-action@v5
        with:
          context: ./detection
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/detection:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/detection:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('{0}/{1}/detection:{2}', env.REGISTRY, env.IMAGE_NAME, github.ref_name) || '' }}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('{0}/{1}/frontend:{2}', env.REGISTRY, env.IMAGE_NAME, github.ref_name) || '' }}

      - name: Build and push IP Lookup image
        uses: docker/build-push-action@v5
        with:
          context: ./iplookup
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/iplookup:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/iplookup:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('{0}/{1}/iplookup:{2}', env.REGISTRY, env.IMAGE_NAME, github.ref_name) || '' }}

      - name: Build and push VPS Audit image
        uses: docker/build-push-action@v5
        with:
          context: ./vps-audit # Specify the context for vps-audit service
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/vps-audit:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/vps-audit:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('{0}/{1}/vps-audit:{2}', env.REGISTRY, env.IMAGE_NAME, github.ref_name) || '' }}

      - name: Build and push Fluent Bit image
        uses: docker/build-push-action@v5
        with:
          context: ./fluent-bit # Specify the context for fluent-bit service
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/fluent-bit:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/fluent-bit:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('{0}/{1}/fluent-bit:{2}', env.REGISTRY, env.IMAGE_NAME, github.ref_name) || '' }}