version: "3.8"

# SIEMBox - Security Information and Event Management System
# This docker-compose file defines all services required to run SIEMBox

services:
  # Database service - PostgreSQL for storing logs, alerts, and configuration
  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-siembox}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
      - POSTGRES_DB=siembox
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - siem_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ${DB_USER:-siembox} -d siembox"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    # No external port by default - accessed by other services internally

  # Redis service - Used for caching and rate limiting
  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    networks:
      - siem_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    # No external port by default - accessed by other services internally

  # API Gateway - Central coordination point for all services
  api:
    image: ghcr.io/cladkins/siembox/api:latest
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "${API_PORT:-8080}:8080"
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER:-siembox}
      - DB_PASSWORD=${DB_PASSWORD:-changeme}
      - DB_NAME=siembox
      - JWT_SECRET=${JWT_SECRET:-change_this_in_production}
      # Internal port remains 8080 - doesn't need to be configurable
    networks:
      - siem_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Detection Service - Manages Sigma rules and analyzes logs
  detection:
    image: ghcr.io/cladkins/siembox/detection:latest
    build:
      context: ./detection
      dockerfile: Dockerfile
    ports:
      - "${DETECTION_PORT:-8001}:8000"
    volumes:
      - sigma_rules:/app/rules
    environment:
      - SIGMA_RULES_PATH=/app/rules
      # Internal port is 8000, external port is configurable
    networks:
      - siem_network
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    user: "65534:65534"
    init: true

  # Collector Service - Receives logs via syslog and HTTP
  collector:
    image: ghcr.io/cladkins/siembox/collector:latest
    build:
      context: ./collector
      dockerfile: Dockerfile
    ports:
      - "${SYSLOG_UDP_PORT:-5514}:5514/udp"
      - "${SYSLOG_TCP_PORT:-5514}:5514/tcp"
      - "${COLLECTOR_PORT:-8000}:8000"
    volumes:
      - collector_data:/var/log/collector
    environment:
      - LOG_LEVEL=info
      - API_URL=http://api:8080
      # Internal ports remain fixed, external ports are configurable
    networks:
      - siem_network
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # IP Lookup Service - Provides IP geolocation and threat intelligence
  iplookup:
    image: ghcr.io/cladkins/siembox/iplookup:latest
    build:
      context: ./iplookup
      dockerfile: Dockerfile
    ports:
      - "${IPLOOKUP_PORT:-8002}:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # Internal port is 8000, external port is configurable
    networks:
      - siem_network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health 2>/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # VPS Audit Service - Performs security audits on remote servers
  vps-audit:
    image: ghcr.io/cladkins/siembox/vps-audit:latest
    build:
      context: ./vps-audit
      dockerfile: Dockerfile
    ports:
      - "${VPS_AUDIT_PORT:-8004}:8004"
    environment:
      - POSTGRES_USER=${DB_USER:-siembox}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=siembox
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-change_this_in_production}
      # Both internal and external ports are 8004
    networks:
      - siem_network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ssh_keys:/root/.ssh

  # Frontend Service - Web interface for the system
  frontend:
    image: ghcr.io/cladkins/siembox/frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      # These URLs need to use the remote host's address
      - REACT_APP_API_URL=http://${HOST_ADDRESS}:${API_PORT:-8080}
      - REACT_APP_DETECTION_URL=http://${HOST_ADDRESS}:${DETECTION_PORT:-8001}
      - REACT_APP_IPLOOKUP_URL=http://${HOST_ADDRESS}:${IPLOOKUP_PORT:-8002}
      - REACT_APP_VPS_AUDIT_URL=http://${HOST_ADDRESS}:${VPS_AUDIT_PORT:-8004}
    networks:
      - siem_network
    depends_on:
      api:
        condition: service_healthy
      detection:
        condition: service_healthy
      vps-audit:
        condition: service_healthy

# Persistent volumes for data storage
volumes:
  collector_data:
    name: siembox_collector_data
  sigma_rules:
    name: siembox_sigma_rules
  postgres_data:
    name: siembox_postgres_data
  redis_data:
    name: siembox_redis_data
  ssh_keys:
    name: siembox_ssh_keys

# Network for service communication
networks:
  siem_network:
    name: siembox_network