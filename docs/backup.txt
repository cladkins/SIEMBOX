[Previous content through "3. Configuration Backup" section]

4. VPS Audit Backup
-----------------

SSH Credentials Backup:
  $ docker-compose exec -T db pg_dump -U siembox -t servers --column-inserts > \
    /backup/vps_servers_$(date +\%Y\%m\%d).sql

Audit Results Backup:
  $ docker-compose exec -T db pg_dump -U siembox -t audit_results --column-inserts > \
    /backup/vps_audit_results_$(date +\%Y\%m\%d).sql

SSH Keys Volume:
  $ docker run --rm -v ssh_keys:/data -v /backup:/backup \
    alpine tar czf /backup/ssh_keys_$(date +\%Y\%m\%d).tar.gz /data

VPS Audit Backup Script (backup_vps_audit.sh):
  #!/bin/bash
  
  BACKUP_DIR="/backup/vps-audit"
  DATE=$(date +%Y%m%d)
  RETENTION_DAYS=14
  
  # Create backup directory
  mkdir -p $BACKUP_DIR
  
  # Backup server configurations and credentials
  docker-compose exec -T db pg_dump -U siembox -t servers --column-inserts > \
    $BACKUP_DIR/vps_servers_$DATE.sql
  
  # Backup audit results
  docker-compose exec -T db pg_dump -U siembox -t audit_results --column-inserts > \
    $BACKUP_DIR/vps_audit_results_$DATE.sql
  
  # Backup SSH keys
  docker run --rm -v ssh_keys:/data -v $BACKUP_DIR:/backup \
    alpine tar czf /backup/ssh_keys_$DATE.tar.gz /data
  
  # Remove old backups
  find $BACKUP_DIR -name "*.sql" -mtime +$RETENTION_DAYS -delete
  find $BACKUP_DIR -name "*.tar.gz" -mtime +$RETENTION_DAYS -delete

[Previous "Disaster Recovery" section with the following additions under "2. Volume Recovery"]

Restore SSH Keys:
  $ docker volume rm ssh_keys
  $ docker volume create ssh_keys
  $ docker run --rm -v ssh_keys:/data -v /backup:/backup \
    alpine tar xzf /backup/ssh_keys_20240120.tar.gz -C /data

[Previous content through "Data Retention" section with the following additions under "2. Alert Retention"]

5. VPS Audit Retention
-------------------

Audit Results Cleanup Script (cleanup_vps_audit.sh):
  #!/bin/bash
  
  # Archive old audit results
  docker-compose exec db psql -U siembox -c \
    "INSERT INTO audit_results_archive 
     SELECT * FROM audit_results 
     WHERE timestamp < NOW() - INTERVAL '90 days';"
  
  # Delete old audit results
  docker-compose exec db psql -U siembox -c \
    "DELETE FROM audit_results 
     WHERE timestamp < NOW() - INTERVAL '90 days';"
  
  # Archive important findings
  docker-compose exec db psql -U siembox -c \
    "INSERT INTO audit_findings_archive 
     SELECT ar.* 
     FROM audit_results ar 
     WHERE ar.timestamp < NOW() - INTERVAL '90 days'
     AND EXISTS (
       SELECT 1 
       FROM jsonb_array_elements(ar.vulnerabilities) v 
       WHERE v->>'severity' = 'high'
     );"

[Previous "Backup Verification" section with the following additions under "1. Automated Testing"]

VPS Audit Verification Script (verify_vps_audit_backup.sh):
  #!/bin/bash
  
  TEST_DIR="/tmp/vps_audit_test"
  DATE=$(date +%Y%m%d)
  
  # Create test environment
  mkdir -p $TEST_DIR
  
  # Test server configurations backup
  psql -f $BACKUP_DIR/vps_servers_$DATE.sql -v ON_ERROR_STOP=1
  
  # Test audit results backup
  psql -f $BACKUP_DIR/vps_audit_results_$DATE.sql -v ON_ERROR_STOP=1
  
  # Test SSH keys backup
  tar tzf $BACKUP_DIR/ssh_keys_$DATE.tar.gz > /dev/null
  
  # Verify data integrity
  docker-compose exec db psql -U siembox -c \
    "SELECT COUNT(*) FROM servers;"
  docker-compose exec db psql -U siembox -c \
    "SELECT COUNT(*) FROM audit_results;"
  
  # Clean up
  rm -rf $TEST_DIR

[Rest of the previous content remains unchanged]